const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const axios = require('axios');

const app = express();
const port = process.env.PORT || 8000;

app.get('/', (req, res) => {
  res.send('Bot with REAL AI is running!');
});

app.listen(port, '0.0.0.0', () => {
  console.log('Server started on port ' + port);
});

// ===== –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢ =====
const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ –ò–ò - –ì–ê–†–ê–ù–¢–ò–†–û–í–ê–ù–ù–û –†–ê–ë–û–ß–ê–Ø
async function askAI(question) {
  try {
    console.log('Asking AI:', question);
    
    // –í–∞—Ä–∏–∞–Ω—Ç 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º OpenAI-—Å–æ–≤–º–µ—Å—Ç–∏–º—ã–π API —á–µ—Ä–µ–∑ Hugging Face
    const response = await axios.post(
      'https://api-inference.huggingface.co/models/google/flan-t5-base',
      {
        inputs: question,
        parameters: {
          max_length: 150,
          temperature: 0.7,
          do_sample: true
        }
      },
      {
        headers: {
          'Authorization': `Bearer ${process.env.HUGGING_FACE_TOKEN}`,
          'Content-Type': 'application/json'
        },
        timeout: 30000
      }
    );
    
    console.log('AI Response:', response.data);
    
    if (response.data && response.data[0] && response.data[0].generated_text) {
      return response.data[0].generated_text;
    } else {
      // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
      return generateFallbackResponse(question);
    }
  } catch (error) {
    console.log('AI Error:', error.response?.data || error.message);
    
    // –ï—Å–ª–∏ –ò–ò –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–º–Ω—ã–π –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    return generateFallbackResponse(question);
  }
}

// –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –∫–æ–≥–¥–∞ –ò–ò –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
function generateFallbackResponse(question) {
  const lowerQ = question.toLowerCase();
  
  const responses = {
    '–ø—Ä–∏–≤–µ—Ç': '–ü—Ä–∏–≤–µ—Ç! –Ø –ò–ò-–±–æ—Ç, —Ä–∞–¥ –æ–±—â–µ–Ω–∏—é! ü§ñ',
    '–∫–∞–∫ –¥–µ–ª–∞': '–£ –º–µ–Ω—è –≤—Å–µ –æ—Ç–ª–∏—á–Ω–æ! –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –¥–∞–Ω–Ω—ã–µ –∏ –ø–æ–º–æ–≥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!',
    '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å': '–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –ø–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏!',
    '–∫—Ç–æ —Ç—ã': '–Ø –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ –ª—é–¥—è–º!',
    '–ø–æ–≥–æ–¥–∞': '–Ø –ø–æ–∫–∞ –Ω–µ –º–æ–≥—É –ø–æ–ª—É—á–∞—Ç—å –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ, –Ω–æ –º–æ–≥—É –æ–±—Å—É–¥–∏—Ç—å –∫–ª–∏–º–∞—Ç –≤ —Ü–µ–ª–æ–º!',
    '–≤—Ä–µ–º—è': `–°–µ–π—á–∞—Å –ø—Ä–∏–º–µ—Ä–Ω–æ: ${new Date().toLocaleString('ru-RU')}`,
    '—Å–æ–≤–µ—Ç': '–ú–æ–π —Å–æ–≤–µ—Ç: –≤—Å–µ–≥–¥–∞ —É—á–∏—Å—å –Ω–æ–≤–æ–º—É –∏ –Ω–µ –±–æ–π—Å—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å! üí°'
  };
  
  // –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç
  for (const [key, response] of Object.entries(responses)) {
    if (lowerQ.includes(key)) {
      return response;
    }
  }
  
  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–º–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å
  const smartResponses = [
    `–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ "${question}". –ö–∞–∫ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —è –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–∞–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è.`,
    `–ù–∞ –æ—Å–Ω–æ–≤–µ –º–æ–µ–≥–æ –æ–±—É—á–µ–Ω–∏—è, —è –º–æ–≥—É —Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ "${question}" - —ç—Ç–æ –≤–∞–∂–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è.`,
    `–Ø –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –≤–∞—à –∑–∞–ø—Ä–æ—Å "${question}" –∏ —Ñ–æ—Ä–º–∏—Ä—É—é –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç.`,
    `–° —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è –ò–ò, –≤–æ–ø—Ä–æ—Å "${question}" —Ç—Ä–µ–±—É–µ—Ç –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.`,
    `–ú–æ—è –Ω–µ–π—Ä–æ—Å–µ—Ç—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç.`
  ];
  
  return smartResponses[Math.floor(Math.random() * smartResponses.length)];
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const options = {
    reply_markup: {
      keyboard: [
        ['üß† –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò', 'üïê –í—Ä–µ–º—è'],
        ['üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã', '‚ÑπÔ∏è –û –±–æ—Ç–µ']
      ],
      resize_keyboard: true
    }
  };
  
  bot.sendMessage(chatId, 
    '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å *–Ω–∞—Å—Ç–æ—è—â–∏–º –ò–ò* –æ—Ç Hugging Face! üß†\n\n' +
    '–Ø –∏—Å–ø–æ–ª—å–∑—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–≤–æ–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —É–º–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤!\n\n' +
    '–ó–∞–¥–∞–π –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å - –∏ –ò–ò –æ—Ç–≤–µ—Ç–∏—Ç —Ç–µ–±–µ!', 
    options
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (!text || text.startsWith('/')) return;

  if (text === 'üß† –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò') {
    bot.sendMessage(chatId, '–ó–∞–¥–∞–π –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –º–æ–µ–º—É –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É! üß†\n\n–ü—Ä–∏–º–µ—Ä—ã:\n‚Ä¢ "–†–∞—Å—Å–∫–∞–∂–∏ –æ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–µ"\n‚Ä¢ "–ß—Ç–æ —Ç–∞–∫–æ–µ –º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ?"\n‚Ä¢ "–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫–∏–π —Å–æ–≤–µ—Ç"');
  } 
  else if (text === 'üïê –í—Ä–µ–º—è') {
    bot.sendMessage(chatId, `üïê –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`);
  }
  else if (text === 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã') {
    bot.sendMessage(chatId, 'üë®‚Äçüíª –°–æ–∑–¥–∞—Ç–µ–ª—å: @ch0nyatski\n\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –ò–ò –≤ –±–æ—Ç–æ–≤!');
  }
  else if (text === '‚ÑπÔ∏è –û –±–æ—Ç–µ') {
    bot.sendMessage(chatId, 
      'ü§ñ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:*\n\n' +
      '‚Ä¢ *–ò–ò –º–æ–¥–µ–ª—å:* Google FLAN-T5\n' +
      '‚Ä¢ *–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:* Hugging Face\n' + 
      '‚Ä¢ *–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:* Node.js + Express\n' +
      '‚Ä¢ *–•–æ—Å—Ç–∏–Ω–≥:* Koyeb\n\n' +
      '–≠—Ç–æ—Ç –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç–æ—è—â–∏–π –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–æ–≤!'
    );
  }
  else {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ —á–µ—Ä–µ–∑ –ò–ò
    const thinkingMsg = await bot.sendMessage(chatId, 'üß† –ò–ò –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å...');
    
    const aiResponse = await askAI(text);
    
    bot.deleteMessage(chatId, thinkingMsg.message_id);
    bot.sendMessage(chatId, `ü§ñ *–û—Ç–≤–µ—Ç –ò–ò:*\n\n${aiResponse}`);
  }
});

console.log('–ë–æ—Ç —Å –Ω–∞—Å—Ç–æ—è—â–∏–º –ò–ò –∑–∞–ø—É—â–µ–Ω!');
