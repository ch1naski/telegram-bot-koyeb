const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const axios = require('axios');

const app = express();
const port = process.env.PORT || 8000;

app.get('/', (req, res) => {
  res.send('Bot with AI is running!');
});

app.listen(port, '0.0.0.0', () => {
  console.log('Server started on port ' + port);
});

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Hugging Face
async function askAI(question) {
  try {
    console.log('Asking AI:', question);
    
    const response = await axios.post(
      'https://api-inference.huggingface.co/models/TinyLlama/TinyLlama-1.1B-Chat-v1.0',
      {
        inputs: question,
        parameters: {
          max_new_tokens: 250,
          temperature: 0.7,
          do_sample: true
        }
      },
      {
        headers: {
          'Authorization': `Bearer ${process.env.HUGGING_FACE_TOKEN}`,
          'Content-Type': 'application/json'
        },
        timeout: 45000
      }
    );

    console.log('AI Response:', response.data);

    if (response.data && response.data[0] && response.data[0].generated_text) {
      let answer = response.data[0].generated_text;
      if (answer.includes(question)) {
        answer = answer.replace(question, '').trim();
      }
      return answer;
    } else {
      return 'ü§ñ –ò–ò –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞–ø—Ä–æ—Å, –Ω–æ –æ—Ç–≤–µ—Ç –∏–º–µ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.';
    }
  } catch (error) {
    console.log('Hugging Face Error:', error.response?.data || error.message);
    
    if (error.response?.status === 503) {
      const estimatedTime = error.response.data.estimated_time;
      console.log(`Model is loading. Estimated time: ${estimatedTime} seconds.`);
      return `‚ö†Ô∏è –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è... –ü–æ–¥–æ–∂–¥–∏ ${estimatedTime || 30} —Å–µ–∫—É–Ω–¥ –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.`;
    }
    
    return '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò. –ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ.';
  }
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const options = {
    reply_markup: {
      keyboard: [
        ['üß† –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
        ['üïê –í—Ä–µ–º—è', '‚ÑπÔ∏è –û –±–æ—Ç–µ']
      ],
      resize_keyboard: true
    }
  };
  
  bot.sendMessage(chatId, 
    '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å *–Ω–∞—Å—Ç–æ—è—â–∏–º –ò–ò*! üß†\n\n' +
    '–ó–∞–¥–∞–π *–õ–Æ–ë–û–ô* –≤–æ–ø—Ä–æ—Å - —è –∏—Å–ø–æ–ª—å–∑—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å TinyLlama –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤!\n\n' +
    '–ü—Ä–∏–º–µ—Ä—ã:\n' +
    '‚Ä¢ "–û–±—ä—è—Å–Ω–∏ –∫–≤–∞–Ω—Ç–æ–≤—É—é —Ñ–∏–∑–∏–∫—É"\n' + 
    '‚Ä¢ "–ù–∞–ø–∏—à–∏ —Å—Ç–∏—Ö –ø—Ä–æ –∫–æ—Ç–∞"\n' +
    '‚Ä¢ "–ß—Ç–æ —Ç–∞–∫–æ–µ —á–µ—Ä–Ω—ã–µ –¥—ã—Ä—ã?"\n\n' +
    '–ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥!', 
    options
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (!text || text.startsWith('/')) return;

  if (text === 'üß† –°–ø—Ä–æ—Å–∏—Ç—å –ò–ò') {
    bot.sendMessage(chatId, '–ù–∞–ø–∏—à–∏ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å! –Ø –∏—Å–ø–æ–ª—å–∑—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å TinyLlama –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç–≤–µ—Ç–æ–≤! üß†\n\n*–ü–µ—Ä–≤—ã–π –∑–∞–ø—Ä–æ—Å –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥*');
  } 
  else if (text === 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã') {
    bot.sendMessage(chatId, 'üë®‚Äçüíª –°–æ–∑–¥–∞—Ç–µ–ª—å: @ch0nyatski\n\n–ë–æ—Ç —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π Hugging Face –ò–ò');
  }
  else if (text === 'üïê –í—Ä–µ–º—è') {
    bot.sendMessage(chatId, `üïê –¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`);
  }
  else if (text === '‚ÑπÔ∏è –û –±–æ—Ç–µ') {
    bot.sendMessage(chatId, 
      'ü§ñ *–û –±–æ—Ç–µ:*\n\n' +
      '‚Ä¢ *–ú–æ–¥–µ–ª—å –ò–ò:* TinyLlama 1.1B\n' +
      '‚Ä¢ *–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞:* Hugging Face\n' + 
      '‚Ä¢ *–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:* Node.js + Express\n' +
      '‚Ä¢ *–•–æ—Å—Ç–∏–Ω–≥:* Koyeb\n\n' +
      '–≠—Ç–æ—Ç –±–æ—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –Ω–∞—Å—Ç–æ—è—â—É—é –Ω–µ–π—Ä–æ—Å–µ—Ç—å!'
    );
  }
  else {
    const thinkingMsg = await bot.sendMessage(chatId, 'üß† –ù–µ–π—Ä–æ—Å–µ—Ç—å –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç...\n*–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥*');
    
    try {
      const aiResponse = await askAI(text);
      bot.deleteMessage(chatId, thinkingMsg.message_id);
      bot.sendMessage(chatId, `ü§ñ *–û—Ç–≤–µ—Ç –ò–ò:*\n\n${aiResponse}`);
    } catch (error) {
      bot.deleteMessage(chatId, thinkingMsg.message_id);
      bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –ò–ò. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
  }
});

console.log('–ë–æ—Ç —Å TinyLlama –ò–ò –∑–∞–ø—É—â–µ–Ω!');
