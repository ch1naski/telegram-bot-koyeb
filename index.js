const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const app = express();
const port = process.env.PORT || 8000;

// –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Koyeb
app.get('/', (req, res) => {
  res.send('Bot is running!');
});

app.listen(port, '0.0.0.0', () => {
  console.log(`Web server is running on port ${port}`);
});

// ===== –¢–ï–õ–ï–ì–†–ê–ú –ë–û–¢ =====
const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, {
  polling: {
    interval: 300,
    autoStart: true,
    params: {
      timeout: 10
    }
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ polling
bot.on('polling_error', (error) => {
  console.log('Polling error, but bot continues:', error.message);
});

// –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π
const knowledgeBase = {
  '–ø—Ä–∏–≤–µ—Ç': '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —É–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫! ü§ñ',
  '–∫–∞–∫ –¥–µ–ª–∞': '–û—Ç–ª–∏—á–Ω–æ! –†–∞–±–æ—Ç–∞—é –Ω–∞–¥ —Å–æ–±–æ–π! –ê —É —Ç–µ–±—è?',
  '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å': '–û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è, –¥–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã!',
  '—Å–æ–≤–µ—Ç': '–ù–∞—á–Ω–∏ —Å –º–∞–ª–æ–≥–æ - –∫–∞–∂–¥—ã–π –¥–µ–Ω—å —É—á–∏ —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ! üí™',
  '–≤—Ä–µ–º—è': `–°–µ–π—á–∞—Å: ${new Date().toLocaleTimeString('ru-RU')}`
};

// –ö–æ–º–∞–Ω–¥–∞ /start —Å –∫–Ω–æ–ø–∫–∞–º–∏
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const options = {
    reply_markup: {
      keyboard: [
        ['‚ùì –ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å', 'üïê –í—Ä–µ–º—è'],
        ['üí° –°–æ–≤–µ—Ç', 'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã'],
        ['üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç']
      ],
      resize_keyboard: true
    }
  };
  
  bot.sendMessage(chatId, 
    '–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —É–ª—É—á—à–µ–Ω–Ω—ã–π –±–æ—Ç! üöÄ\n–í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫—É –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –≤–æ–ø—Ä–æ—Å:', 
    options
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∏ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text.toLowerCase().trim();

  if (text === '/start') return;

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
  switch(text) {
    case '‚ùì —á—Ç–æ —Ç—ã —É–º–µ–µ—à—å':
      bot.sendMessage(chatId, '–Ø —É–º–µ—é:\n‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è\n‚Ä¢ –î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã\n‚Ä¢ –ò –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!');
      break;
    case 'üïê –≤—Ä–µ–º—è':
      bot.sendMessage(chatId, `–¢–æ—á–Ω–æ–µ –≤—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`);
      break;
    case 'üí° —Å–æ–≤–µ—Ç':
      const advice = [
        '–ù–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–¥–∞–≤–∞–π—Å—è!',
        '–ö–∞–∂–¥–∞—è –ø—Ä–æ–±–ª–µ–º–∞ - —ç—Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å',
        '–£—á–∏—Å—å –Ω–∞ –æ—à–∏–±–∫–∞—Ö',
        '–ú–µ—á—Ç–∞–π –º–∞—Å—à—Ç–∞–±–Ω–æ!'
      ];
      bot.sendMessage(chatId, `–°–æ–≤–µ—Ç: ${advice[Math.floor(Math.random() * advice.length)]}`);
      break;
    case 'üìû –∫–æ–Ω—Ç–∞–∫—Ç—ã':
      bot.sendMessage(chatId, '–°–≤—è–∑—å —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º: @chinaski\n–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º —Å–æ–∑–¥–∞–Ω–∏—è –±–æ—Ç–æ–≤!');
      break;
    case 'üé≤ —Å–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç':
      const facts = [
        '–ö–æ—Ç—ã —Å–ø—è—Ç 70% –∂–∏–∑–Ω–∏ üò¥',
        '–ú–µ–¥ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ—Ä—Ç–∏—Ç—Å—è üçØ', 
        '–¢–µ–ª–µ–≥—Ä–∞–º —Å–æ–∑–¥–∞–ª–∏ –≤ 2013 –≥–æ–¥—É',
        'Python –Ω–∞–∑–≤–∞–Ω –≤ —á–µ—Å—Ç—å –∫–æ–º–µ–¥–∏–π–Ω–æ–≥–æ —à–æ—É üêç'
      ];
      bot.sendMessage(chatId, `–§–∞–∫—Ç: ${facts[Math.floor(Math.random() * facts.length)]}`);
      break;
    default:
      // –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
      const response = knowledgeBase[text] || 
        `–ü–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –æ—Ç–≤–µ—Ç –Ω–∞ "${msg.text}". –ù–æ —è —É—á—É—Å—å! –ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ üëÜ`;
      bot.sendMessage(chatId, response);
  }
});

console.log('–£–ª—É—á—à–µ–Ω–Ω—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!');
