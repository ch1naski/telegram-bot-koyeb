// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∫ Hugging Face —á–µ—Ä–µ–∑ Inference API
async function askAI(question) {
  try {
    console.log('Asking AI:', question);

    // –í–∞—Ä–∏–∞–Ω—Ç —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API –¥–ª—è —á–∞—Ç-–º–æ–¥–µ–ª–µ–π
    const response = await axios.post(
      'https://api-inference.huggingface.co/models/TinyLlama/TinyLlama-1.1B-Chat-v1.0',
      {
        inputs: question,
        parameters: {
          max_new_tokens: 250,
          temperature: 0.7,
          do_sample: true
        }
      },
      {
        headers: {
          'Authorization': `Bearer ${process.env.HUGGING_FACE_TOKEN}`,
          'Content-Type': 'application/json'
        },
        timeout: 45000 // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏
      }
    );

    console.log('AI Response:', response.data);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    if (response.data && response.data[0] && response.data[0].generated_text) {
      let answer = response.data[0].generated_text;
      // –û—á–∏—â–∞–µ–º –æ—Ç–≤–µ—Ç, —É–¥–∞–ª—è—è –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
      if (answer.includes(question)) {
        answer = answer.replace(question, '').trim();
      }
      return answer;
    } else {
      return 'ü§ñ –ò–ò –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞–ø—Ä–æ—Å, –Ω–æ –æ—Ç–≤–µ—Ç –∏–º–µ–µ—Ç –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.';
    }
  } catch (error) {
    console.log('Hugging Face Error:', error.response?.data || error.message);
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ "–º–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
    if (error.response?.status === 503) {
      const estimatedTime = error.response.data.estimated_time;
      console.log(`Model is loading. Estimated time: ${estimatedTime} seconds.`);
      return `‚ö†Ô∏è –ú–æ–¥–µ–ª—å –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è. –≠—Ç–æ –∑–∞–π–º–µ—Ç –æ–∫–æ–ª–æ ${estimatedTime || 30} —Å–µ–∫—É–Ω–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–≤—Ç–æ—Ä–∏ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É.`;
    }
    
    return '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò. –ü–æ–ø—Ä–æ–±—É–π —Å–ø—Ä–æ—Å–∏—Ç—å —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ.';
  }
}
